name: Python Test and Performance CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  # 1. Unit/Integration Test Job
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: mydatabase_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Fix Workspace Permissions
        run: sudo chown -R $USER:$USER $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Pytest
        env:
          SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          EMAIL_APP_PASSWORD: ${{ secrets.EMAIL_APP_PASSWORD }}
        run: |
          pytest -v -m "not simulation"

  # 2. Performance Test Job
  performance-test:
    needs: test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: mydatabase_test
        ports:
          - 3306:3306
        volumes:
          - ./.github/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Fix Workspace Permissions
        run: sudo chown -R $USER:$USER $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create database tables
        run: python init_db.py

      - name: Run FastAPI Server & Locust Performance Test
        run: |
          gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.main:app &
          sleep 5
          mkdir -p reports
          locust -f performance_tests/locustfile.py \
            --headless \
            --users 300 --spawn-rate 20 \
            --run-time 1m \
            --html reports/performance_report.html \
            --csv reports/performance_report

      - name: Upload Performance Report
        uses: actions/upload-artifact@v4
        with:
          name: locust-report
          path: reports/
